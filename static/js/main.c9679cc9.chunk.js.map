{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","cn","TodoList","todos","map","getFindedUser","usersFromServer","find","visibleTodos","userId","userOfTodo","App","useState","todoTitle","setTodoTitle","selectedUser","setSelectedUser","isAdd","setIsAdd","action","method","type","placeholder","value","onChange","event","target","disabled","onClick","preventDefault","newTodo","reduce","prev","cur","trim","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c9679cc9.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\n\nfunction getFindedUser(id: number) {\n  return usersFromServer.find(user => user.id === id);\n}\n\nlet visibleTodos: Todo[] = todosFromServer.map(todo => {\n  const userOfTodo = getFindedUser(todo.userId);\n  const newTodo: Todo = { ...todo, user: userOfTodo || null };\n\n  return newTodo;\n});\n\nexport const App = () => {\n  const [todoTitle, setTodoTitle] = useState('');\n  const [selectedUser, setSelectedUser] = useState('0');\n  const [isAdd, setIsAdd] = useState(false);\n\n  const handleReset = () => {\n    setTodoTitle('');\n    setSelectedUser('0');\n    setIsAdd(false);\n  };\n\n  const handleSubmit = (event: { preventDefault: () => void; }) => {\n    event.preventDefault();\n    setIsAdd(true);\n\n    if (todoTitle !== '' && selectedUser !== '0') {\n      const userOfTodo = getFindedUser(+selectedUser);\n\n      const nextTodoId = visibleTodos\n        .reduce((prev, cur) => ((prev.id > cur.id) ? prev : cur)).id + 1;\n\n      const newTodo: Todo = {\n        id: nextTodoId,\n        title: todoTitle.trim(),\n        completed: false,\n        user: userOfTodo || null,\n      };\n\n      visibleTodos = [...visibleTodos, newTodo];\n      handleReset();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\">\n        <div className=\"field\">\n          <label>\n            <span>Title: </span>\n\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={todoTitle}\n              onChange={(event) => {\n                setTodoTitle(event.target.value);\n              }}\n            />\n\n            {(todoTitle === '' && isAdd) && (\n              <span className=\"error\">\n                Please enter a title\n              </span>\n            )}\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label>\n            <span>User: </span>\n\n            <select\n              data-cy=\"userSelect\"\n              value={selectedUser}\n              onChange={(event) => {\n                setSelectedUser(event.target.value);\n              }}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n\n              {usersFromServer.map(user => {\n                return (<option value={user.id}>{user.name}</option>);\n              })}\n            </select>\n          </label>\n\n          {(selectedUser === '0' && isAdd) && (\n            <span className=\"error\">\n              Please choose a user\n            </span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={handleSubmit}\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}